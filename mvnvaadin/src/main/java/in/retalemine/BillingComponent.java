package in.retalemine;

import java.util.Arrays;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.event.FieldEvents.BlurEvent;
import com.vaadin.event.FieldEvents.BlurListener;
import com.vaadin.shared.ui.combobox.FilteringMode;
import com.vaadin.ui.AbstractSelect.NewItemHandler;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

public class BillingComponent extends CustomComponent {
	
	@AutoGenerated
	private VerticalLayout mainLayout;
	
	public BillingComponent() {
		setCompositionRoot(buildMainLayout());
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		setWidth("100.0%");
		setHeight("100.0%");
		
		mainLayout.addComponent(buildBillingHeader());
		mainLayout.addComponent(buildAddToCart());
		return mainLayout;
	}

	private Component buildAddToCart() {
		HorizontalLayout addToCartLayout = new HorizontalLayout();
		final ComboBox productNameCB = new ComboBox("Product List", Arrays.asList(new String[] {
				"Lux Sandal", "Hamam", "Cinthol Old" }));
		
		productNameCB.setInputPrompt("Enter a product name");
		productNameCB.setFilteringMode(FilteringMode.CONTAINS);
		productNameCB.setImmediate(true);
		productNameCB.setRequired(true);
        productNameCB.setPageLength(10);
		productNameCB.setScrollToSelectedItem(true);
        productNameCB.setNullSelectionAllowed(true);
        /*String nullitem = "-- none --";
        productNameCB.addItem(nullitem);
        productNameCB.setNullSelectionItemId(nullitem);*/
        productNameCB.setNewItemsAllowed(true);        
		productNameCB.setNewItemHandler(new NewItemHandler() {
            @Override
            public void addNewItem(String newProductName) {
                boolean isNewProduct = true;
                for (final Object itemId : productNameCB.getItemIds()) {
                    if (newProductName.equalsIgnoreCase(productNameCB
                            .getItemCaption(itemId))) {
                        isNewProduct = false;
                        productNameCB.select(itemId);
                        break;
                    }
                }
				if (isNewProduct) {
					StringBuffer camelCasePName = new StringBuffer();
					Matcher camelCaseMatcher = Pattern.compile(
							"([a-z])([a-z]*)", Pattern.CASE_INSENSITIVE)
							.matcher(newProductName.trim().replaceAll("\\s+"," "));
					while (camelCaseMatcher.find()) {
						camelCaseMatcher.appendReplacement(camelCasePName,
								camelCaseMatcher.group(1).toUpperCase()
										+ camelCaseMatcher.group(2).toLowerCase());
					}
					camelCaseMatcher.appendTail(camelCasePName);
					productNameCB.addItem(camelCasePName.toString());
					productNameCB.setValue(camelCasePName.toString());
				}
            }
        });
		
		addToCartLayout.addComponent(productNameCB);
		
		return addToCartLayout;
	}

	private Component buildBillingHeader() {
		HorizontalLayout billingHeaderLayout = new HorizontalLayout();
		HorizontalLayout billNoLayout = new HorizontalLayout();
		HorizontalLayout billDateLayout = new HorizontalLayout();
		Label billNoCaption = new Label();
		Label billNo = new Label();
		Label billDateCaption = new Label();
		DateField billDate = new DateField();
		
		billingHeaderLayout.setImmediate(false);
		billingHeaderLayout.setWidth("100%");
		billingHeaderLayout.setHeight("100%");
		billingHeaderLayout.setMargin(false);
		billNoLayout.setSpacing(true);
		billDateLayout.setSpacing(true);
		
		billNoCaption.setValue("Bill No#");
		billNo.setValue("1");
		billDateCaption.setValue("Date:");
        billDate.setValue(new Date());
        billDate.setReadOnly(true);
        billDate.setDateFormat("dd-mm-yy");
        
		billingHeaderLayout.addComponent(billNoLayout);
		billingHeaderLayout.setComponentAlignment(billNoLayout, Alignment.MIDDLE_LEFT);
		billingHeaderLayout.addComponent(billDateLayout);
		billingHeaderLayout.setComponentAlignment(billDateLayout, Alignment.MIDDLE_RIGHT);
		
		billNoLayout.addComponent(billNoCaption);
		billNoLayout.addComponent(billNo);
		
		billDateLayout.addComponent(billDateCaption);
		billDateLayout.addComponent(billDate);
		return billingHeaderLayout;
	}
}
